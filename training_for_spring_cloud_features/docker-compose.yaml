version: '2.4'

networks:
  service-net:
    driver: bridge

services:
  zipkin:
    image: "openzipkin/zipkin"
    container_name: "zipkin"
    environment:
      - "STORAGE_TYPE=mem"
    ports:
      - "9411:9411"
    networks:
      - "service-net"

  service-discovery:
    image: "service-discovery:latest"
    ports:
      - "8761:8761"
    networks:
      - "service-net"
    depends_on:
      - "zipkin"
  zookeeper:
    image: "confluentinc/cp-zookeeper:latest"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "22181:2181"
    networks:
      - "service-net"
  kafka:
    image: "confluentinc/cp-kafka:latest"
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - "zookeeper"
    networks:
      - "service-net"

  resource-monitor:
    image: "resource-monitor:latest"
    ports:
      - "9090:9090"
    environment:
      - EUREKA_SERVICE_URL=http://service-discovery:8761
    networks:
      - "service-net"
    depends_on:
      - "service-discovery"

  api-gateway:
    image: "api-gateway:latest"
    ports:
      - "9080:9080"
    networks:
      - "service-net"
    environment:
      - EUREKA_SERVICE_URL=http://service-discovery:8761
      - ADMIN_CLIENT_SERVICE_URL=http://api-gateway:9080
      - ADMIN_CLIENT_URL=http://resource-monitor:9090
      - ZIPKIN_SERVICE_URL= http://zipkin:9411
    depends_on:
      - "service-discovery"
      - "resource-monitor"

  "configuration-server":
    image: "configuration-server:latest"
    ports:
      - "8888:8888"
    networks:
      - "service-net"
    environment:
      - EUREKA_SERVICE_URL=http://service-discovery:8761
      - ADMIN_CLIENT_SERVICE_URL=http://configuration-server:8888
      - ADMIN_CLIENT_URL=http://resource-monitor:9090
      - ZIPKIN_SERVICE_URL=http://zipkin:9411
    depends_on:
      - "service-discovery"
      - "resource-monitor"
  dataflow-server:
    user: root
    image: springcloud/spring-cloud-dataflow-server:${DATAFLOW_VERSION:-2.11.3-SNAPSHOT}${BP_JVM_VERSION:-}
    container_name: dataflow-server
    networks:
      - "service-net"
    ports:
      - "9393:9393"
    environment:
      - LANG=en_US.utf8
      - LC_ALL=en_US.utf8
      - JDK_JAVA_OPTIONS=-Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8
      - HOST_MOUNT_PATH=~/.m2
      - COMPOSE_PROJECT_NAME=scdf
      - DOCKER_MOUNT_PATH=/home/cnb/.m2/
      - SPRING_CLOUD_DATAFLOW_TASK_PLATFORM_LOCAL_ACCOUNTS_DEFAULT_DOCKER_NETWORK=${COMPOSE_PROJECT_NAME:?COMPOSE_PROJECT_NAME must be set when DooD is enabled}_default
      - SPRING_CLOUD_DATAFLOW_TASK_PLATFORM_LOCAL_ACCOUNTS_DEFAULT_DOCKER_DELETE_CONTAINER_ON_EXIT=${DOCKER_DELETE_CONTAINER_ON_EXIT:-true}
      - SPRING_CLOUD_DATAFLOW_TASK_PLATFORM_LOCAL_ACCOUNTS_DEFAULT_DOCKER_PORTRANGE_LOW=20200
      - SPRING_CLOUD_DATAFLOW_TASK_PLATFORM_LOCAL_ACCOUNTS_DEFAULT_DOCKER_PORTRANGE_HIGH=61000
      - SPRING_CLOUD_DATAFLOW_TASK_COMPOSEDTASKRUNNER_URI=docker://springcloud/spring-cloud-dataflow-composed-task-runner:${DATAFLOW_VERSION:-2.11.3-SNAPSHOT}${BP_JVM_VERSION:-}
      - SPRING_CLOUD_DATAFLOW_SERVER_URI=${DATAFLOW_URI:-http://dataflow-server:9393}
      - SPRING_CLOUD_DATAFLOW_APPLICATIONPROPERTIES_TASK_SPRING_CLOUD_TASK_CLOSECONTEXTENABLED=true
      - SPRING_CLOUD_SKIPPER_CLIENT_SERVER_URI=${SKIPPER_URI:-http://skipper-server:7577}/api
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/dataflow
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=yourpassword
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.mariadb.jdbc.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.MariaDB106Dialect
      - SPRING_CLOUD_DATAFLOW_APPLICATIONPROPERTIES_STREAM_SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=PLAINTEXT://kafka:9092
      - SPRING_CLOUD_DATAFLOW_APPLICATIONPROPERTIES_STREAM_SPRING_CLOUD_STREAM_KAFKA_STREAMS_BINDER_BROKERS=PLAINTEXT://kafka:9092
      - SPRING_CLOUD_DATAFLOW_APPLICATIONPROPERTIES_STREAM_SPRING_CLOUD_STREAM_KAFKA_BINDER_ZKNODES=zookeeper:2181
      - SPRING_CLOUD_DATAFLOW_APPLICATIONPROPERTIES_STREAM_SPRING_CLOUD_STREAM_KAFKA_STREAMS_BINDER_ZKNODES=zookeeper:2181
      - SPRING_CLOUD_DATAFLOW_APPLICATIONPROPERTIES_STREAM_SPRING_KAFKA_STREAMS_PROPERTIES_METRICS_RECORDING_LEVEL=DEBUG
    depends_on:
      - skipper-server
      - mariadb
    restart: always
    entrypoint: >
      /bin/sh -c "
         apt-get update && apt-get install --no-install-recommends -y wget &&
         wget --no-check-certificate -P /tmp/ https://get.docker.com/builds/Linux/x86_64/docker-latest.tgz &&
         tar -xvf /tmp/docker-latest.tgz --directory /tmp/ &&
         mv /tmp/docker/docker /usr/local/bin && /cnb/process/web"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${HOST_MOUNT_PATH:-.}:${DOCKER_MOUNT_PATH:-/home/cnb/scdf}

  app-import-stream:
    image: springcloud/baseimage:1.0.4
    container_name: dataflow-app-import-stream
    networks:
      - "service-net"
    depends_on:
      - dataflow-server
    #    command: >
    #      /bin/sh -c "
    #        ./wait-for-it.sh -t 360 dataflow-server:9393;
    #        wget -qO- '${DATAFLOW_URI:-http://dataflow-server:9393}/apps' --no-check-certificate --post-data='uri=${STREAM_APPS_URI:-https://dataflow.spring.io/kafka-maven-latest&force=true}';
    #        wget -qO- '${DATAFLOW_URI:-http://dataflow-server:9393}/apps/sink/dataflow-tasklauncher/${DATAFLOW_VERSION:-2.11.3-SNAPSHOT}' --no-check-certificate --post-data='uri=maven://org.springframework.cloud:spring-cloud-dataflow-tasklauncher-sink-kafka:${DATAFLOW_VERSION:-2.11.3-SNAPSHOT}';
    #        echo 'Maven Stream apps imported'"
    command: >
      /bin/sh -c "
        ./wait-for-it.sh -t 360 dataflow-server:9393;
        wget -qO- '${DATAFLOW_URI:-http://dataflow-server:9393}/apps' --no-check-certificate  --post-data='uri=${TASK_APPS_URI:-https://dataflow.spring.io/task-docker-latest&force=true}';
        wget -qO- '${DATAFLOW_URI:-http://dataflow-server:9393}/apps/timestamp3' --no-check-certificate --post-data='bootVersion=3&uri=docker:springcloudtask/timestamp-task:3.0.0';
        wget -qO- '${DATAFLOW_URI:-http://dataflow-server:9393}/apps/timestamp-batch3' --no-check-certificate --post-data='bootVersion=3&uri=docker:springcloudtask/timestamp-batch-task:3.0.0';
        echo 'Docker Task apps imported'"

  app-import-task:
    image: springcloud/baseimage:1.0.4
    container_name: dataflow-app-import-task
    networks:
      - "service-net"
    depends_on:
      - dataflow-server
    #    command: >
    #      /bin/sh -c "
    #        ./wait-for-it.sh -t 360 dataflow-server:9393;
    #        wget -qO- '${DATAFLOW_URI:-http://dataflow-server:9393}/apps' --no-check-certificate --post-data='uri=${TASK_APPS_URI:-https://dataflow.spring.io/task-maven-latest&force=true}';
    #        wget -qO- '${DATAFLOW_URI:-http://dataflow-server:9393}/apps/timestamp3' --no-check-certificate --post-data='bootVersion=3&uri=maven://uri=maven:io.spring:timestamp-task:3.0.0';
    #        wget -qO- '${DATAFLOW_URI:-http://dataflow-server:9393}/apps/timestamp-batch3' --no-check-certificate --post-data='bootVersion=3&uri=maven://uri=maven:io.spring:timestamp-batch:3.0.0';
    #        echo 'Maven Task apps imported'"
    command: >
      /bin/sh -c "
        ./wait-for-it.sh -t 360 dataflow-server:9393;
        wget -qO- '${DATAFLOW_URI:-http://dataflow-server:9393}/apps' --no-check-certificate  --post-data='uri=${TASK_APPS_URI:-https://dataflow.spring.io/task-docker-latest&force=true}';
        wget -qO- '${DATAFLOW_URI:-http://dataflow-server:9393}/apps/timestamp3' --no-check-certificate --post-data='bootVersion=3&uri=docker:springcloudtask/timestamp-task:3.0.0';
        wget -qO- '${DATAFLOW_URI:-http://dataflow-server:9393}/apps/timestamp-batch3' --no-check-certificate --post-data='bootVersion=3&uri=docker:springcloudtask/timestamp-batch-task:3.0.0';
        echo 'Docker Task apps imported'"

  skipper-server:
    user: root
    image: springcloud/spring-cloud-skipper-server:${SKIPPER_VERSION:-2.11.3-SNAPSHOT}${BP_JVM_VERSION:-}
    container_name: skipper-server
    networks:
      - "service-net"
    ports:
      - "7577:7577"
      - ${APPS_PORT_RANGE:-20000-20195:20000-20195}
    environment:
      - SPRING_CLOUD_SKIPPER_SERVER_PLATFORM_LOCAL_ACCOUNTS_DEFAULT_DOCKER_NETWORK=${COMPOSE_PROJECT_NAME:?COMPOSE_PROJECT_NAME must be set when DooD is enabled}_default
      - SPRING_CLOUD_SKIPPER_SERVER_PLATFORM_LOCAL_ACCOUNTS_DEFAULT_DOCKER_DELETE_CONTAINER_ON_EXIT=${DOCKER_DELETE_CONTAINER_ON_EXIT:-true}
      - SPRING_CLOUD_SKIPPER_SERVER_PLATFORM_LOCAL_ACCOUNTS_DEFAULT_DOCKER_PORTRANGE_LOW=20200
      - SPRING_CLOUD_SKIPPER_SERVER_PLATFORM_LOCAL_ACCOUNTS_DEFAULT_DOCKER_PORTRANGE_HIGH=61000
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/dataflow
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=yourpassword
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.mariadb.jdbc.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.MariaDB106Dialect
      - SPRING_CLOUD_DATAFLOW_APPLICATIONPROPERTIES_STREAM_SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=PLAINTEXT://kafka:9092
      - SPRING_CLOUD_DATAFLOW_APPLICATIONPROPERTIES_STREAM_SPRING_CLOUD_STREAM_KAFKA_STREAMS_BINDER_BROKERS=PLAINTEXT://kafka:9092
      - SPRING_CLOUD_DATAFLOW_APPLICATIONPROPERTIES_STREAM_SPRING_CLOUD_STREAM_KAFKA_BINDER_ZKNODES=zookeeper:2181
      - SPRING_CLOUD_DATAFLOW_APPLICATIONPROPERTIES_STREAM_SPRING_CLOUD_STREAM_KAFKA_STREAMS_BINDER_ZKNODES=zookeeper:2181
      - SPRING_CLOUD_DATAFLOW_APPLICATIONPROPERTIES_STREAM_SPRING_KAFKA_STREAMS_PROPERTIES_METRICS_RECORDING_LEVEL=DEBUG
    depends_on:
      - mariadb

  mariadb:
    image: mariadb:10.6
    container_name: dataflow-mariadb
    networks:
      - "service-net"
    environment:
      LANG: en.US-utf8
      LC_ALL: en_US.utf8
      MARIADB_DATABASE: dataflow
      MARIADB_ROOT_PASSWORD: yourpassword
    expose:
      - 3306
    ports:
      - '3306:3306'

  cookie-shop:
    image: "cookie-shop:latest"
    ports:
      - "8080:8080"
    networks:
      - "service-net"
    environment:
      - EUREKA_SERVICE_URL=http://service-discovery:8761
      - ADMIN_CLIENT_SERVICE_URL=http://cookie-shop:8080
      - ADMIN_CLIENT_URL=http://resource-monitor:9090
      - ZIPKIN_SERVICE_URL=http://zipkin:9411
      - CONFIGURATION_SERVER_URL=http://configuration-server:8888
      - CONFIGURATION_SERVER_ID=CONFIGURATION-SERVER
      - KAFKA_BROKER_URL=kafka:9092
    depends_on:
      - "service-discovery"
      - "resource-monitor"
      - "api-gateway"
      - "configuration-server"
      - "kafka"

  cookie-factory:
    image: "cookie-factory:latest"
    ports:
      - "8081:8081"
    networks:
      - "service-net"
    environment:
      - EUREKA_SERVICE_URL=http://service-discovery:8761
      - ADMIN_CLIENT_SERVICE_URL=http://cookie-shop:8080
      - ADMIN_CLIENT_URL=http://resource-monitor:9090
      - ZIPKIN_SERVICE_URL=http://zipkin:9411
      - CONFIGURATION_SERVER_URL=http://configuration-server:8888
      - CONFIGURATION_SERVER_ID=CONFIGURATION-SERVER
      - KAFKA_BROKER_URL=kafka:9092
    depends_on:
      - "service-discovery"
      - "resource-monitor"
      - "api-gateway"
      - "configuration-server"
      - "kafka"

  automation-order:
    image: "automation-order:latest"
    ports:
      - "8821:8821"
    networks:
      - "service-net"
    environment:
      - EUREKA_SERVICE_URL=http://service-discovery:8761
      - ADMIN_CLIENT_SERVICE_URL=http://cookie-shop:8080
      - ADMIN_CLIENT_URL=http://resource-monitor:9090
      - ZIPKIN_SERVICE_URL=http://zipkin:9411
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/dataflow?useMysqlMetadata=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=yourpassword
    depends_on:
      - "service-discovery"
      - "resource-monitor"
      - "api-gateway"
      - "dataflow-server"